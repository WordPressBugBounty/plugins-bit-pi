import{a4 as m,a5 as c}from"./_applist-869.js";import{_ as n}from"./main-salty-geckos-sort.js";import{s as E}from"./machine.-202.js";import{h as o,f as i,a as r,c as l}from"./mailchim-337.js";import"./lodash-621.js";import"./mutative-523.js";globalThis.jotaiAtomCache=globalThis.jotaiAtomCache||{cache:new Map,get(t,e){return this.cache.has(t)?this.cache.get(t):(this.cache.set(t,e),e)}};const u=m(({helpers:t})=>({states:{components:[l(t),{allowClear:!0,componentName:t.componentName.select,helperText:n("Choose the list from which you want to delete a member."),id:"select-audience",label:n("Select Audience List"),onChange:"HANDLE_SELECT_AUDIENCE",onRefetch:"REFETCH_AUDIENCE_LIST",options:[],path:"select-audience",render:"IF_CONNECTION_SELECTED",required:!0,value:void 0},{componentName:t.componentName.mixInput,helperText:n("Enter the member's email you want to delete from the list."),id:"member-email",label:n("Member Email"),onChange:"SET_MEMBER_EMAIL",path:"member-email",render:"IF_CONNECTION_SELECTED",required:!0,value:[]}]},actions:{SET_CONNECTION:async({$:e,e:a})=>{o("connectionId")({$:e,e:a}),await i(e)},CONNECTION_ADD_CHANGE:r,HANDLE_SELECT_AUDIENCE:o("audienceList"),IF_CONNECTION_SELECTED:({$:e})=>{var a;return c((a=e.getComponent("connection-id"))==null?void 0:a.value)},REFETCH_AUDIENCE_LIST:async({$:e})=>await i(e),SET_MEMBER_EMAIL:o("memberEmail"),ON_MACHINE_LOAD:async({$:e})=>{var a;E(e,[{db:"connectionId",id:"connection-id"},{db:"audienceList",id:"select-audience"},{db:"memberEmail",id:"member-email"}]),(a=e.db)!=null&&a.connectionId&&await i(e)}}}));export{u as default};
